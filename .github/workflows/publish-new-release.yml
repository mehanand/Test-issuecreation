name: "Publish new release"

on:
  issues:
    types: [opened]

jobs:
  publish-new-release:
    name: "Publish a new release"
    runs-on: ubuntu-latest
    # Only run for issues with a specific title and label. Not strictly required but makes finding the release issue again later easier.
    # There is also a whitelist that you may want to use to restrict, who can trigger this workflow.
    # Unfortunately, we cannot create an array on the fly, so the whitelist is just comma-separated.
    if: startsWith(github.event.issue.title, 'Release version') && contains(github.event.issue.labels.*.name, 'release') && contains('mehanand@adobe.com', github.event.issue.user.login)
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Extract version from issue title
        run: |
          TITLE="${{ github.event.issue.title }}"
          VERSION=${TITLE#Release version }
          echo "::set-env name=RELEASE_VERSION::$VERSION"
      - name: Initialize mandatory git config
        run: |
          git config user.name "GitHub actions"
          git config user.email noreply@github.com
      - name: Release with gitflow
        env:
          GITHUB_USER: ${{github.actor}}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn -B gitflow:release-start gitflow:release-finish -DreleaseVersion=${{ env.RELEASE_VERSION }}
      - name: Close release issue
        uses: bdougie/close-issues-based-on-label@master
        env:
          LABEL: release
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Trigger Sync Master Branch
        run: |
          curl \
          -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: Bearer ${{ secrets.PAT }}" \
          https://api.github.com/repos/${{ github.repository }}/dispatches \
          -d '{"event_type":"backend_automation"}'
